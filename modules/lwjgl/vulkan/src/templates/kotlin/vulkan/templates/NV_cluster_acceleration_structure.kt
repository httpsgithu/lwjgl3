/*
 * Copyright LWJGL. All rights reserved.
 * License terms: https://www.lwjgl.org/license
 * MACHINE GENERATED FILE, DO NOT EDIT
 */
package vulkan.templates

import org.lwjgl.generator.*
import vulkan.*

val NV_cluster_acceleration_structure = "NVClusterAccelerationStructure".nativeClassVK("NV_cluster_acceleration_structure", type = "device", postfix = "NV") {
    IntConstant(
        "NV_CLUSTER_ACCELERATION_STRUCTURE_SPEC_VERSION".."2"
    )

    StringConstant(
        "NV_CLUSTER_ACCELERATION_STRUCTURE_EXTENSION_NAME".."VK_NV_cluster_acceleration_structure"
    )

    EnumConstant(
        "STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_FEATURES_NV".."1000569000",
        "STRUCTURE_TYPE_PHYSICAL_DEVICE_CLUSTER_ACCELERATION_STRUCTURE_PROPERTIES_NV".."1000569001",
        "STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_CLUSTERS_BOTTOM_LEVEL_INPUT_NV".."1000569002",
        "STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_TRIANGLE_CLUSTER_INPUT_NV".."1000569003",
        "STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_MOVE_OBJECTS_INPUT_NV".."1000569004",
        "STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_INPUT_INFO_NV".."1000569005",
        "STRUCTURE_TYPE_CLUSTER_ACCELERATION_STRUCTURE_COMMANDS_INFO_NV".."1000569006",
        "STRUCTURE_TYPE_RAY_TRACING_PIPELINE_CLUSTER_ACCELERATION_STRUCTURE_CREATE_INFO_NV".."1000569007"
    )

    EnumConstant(
        "OPACITY_MICROMAP_SPECIAL_INDEX_CLUSTER_GEOMETRY_DISABLE_OPACITY_MICROMAP_NV".."-5"
    )

    EnumConstant(
        "CLUSTER_ACCELERATION_STRUCTURE_TYPE_CLUSTERS_BOTTOM_LEVEL_NV".."0",
        "CLUSTER_ACCELERATION_STRUCTURE_TYPE_TRIANGLE_CLUSTER_NV".."1",
        "CLUSTER_ACCELERATION_STRUCTURE_TYPE_TRIANGLE_CLUSTER_TEMPLATE_NV".."2"
    )

    EnumConstant(
        "CLUSTER_ACCELERATION_STRUCTURE_OP_TYPE_MOVE_OBJECTS_NV".."0",
        "CLUSTER_ACCELERATION_STRUCTURE_OP_TYPE_BUILD_CLUSTERS_BOTTOM_LEVEL_NV".."1",
        "CLUSTER_ACCELERATION_STRUCTURE_OP_TYPE_BUILD_TRIANGLE_CLUSTER_NV".."2",
        "CLUSTER_ACCELERATION_STRUCTURE_OP_TYPE_BUILD_TRIANGLE_CLUSTER_TEMPLATE_NV".."3",
        "CLUSTER_ACCELERATION_STRUCTURE_OP_TYPE_INSTANTIATE_TRIANGLE_CLUSTER_NV".."4"
    )

    EnumConstant(
        "CLUSTER_ACCELERATION_STRUCTURE_OP_MODE_IMPLICIT_DESTINATIONS_NV".."0",
        "CLUSTER_ACCELERATION_STRUCTURE_OP_MODE_EXPLICIT_DESTINATIONS_NV".."1",
        "CLUSTER_ACCELERATION_STRUCTURE_OP_MODE_COMPUTE_SIZES_NV".."2"
    )

    EnumConstant(
        "CLUSTER_ACCELERATION_STRUCTURE_ADDRESS_RESOLUTION_INDIRECTED_DST_IMPLICIT_DATA_BIT_NV".enum(0x00000001),
        "CLUSTER_ACCELERATION_STRUCTURE_ADDRESS_RESOLUTION_INDIRECTED_SCRATCH_DATA_BIT_NV".enum(0x00000002),
        "CLUSTER_ACCELERATION_STRUCTURE_ADDRESS_RESOLUTION_INDIRECTED_DST_ADDRESS_ARRAY_BIT_NV".enum(0x00000004),
        "CLUSTER_ACCELERATION_STRUCTURE_ADDRESS_RESOLUTION_INDIRECTED_DST_SIZES_ARRAY_BIT_NV".enum(0x00000008),
        "CLUSTER_ACCELERATION_STRUCTURE_ADDRESS_RESOLUTION_INDIRECTED_SRC_INFOS_ARRAY_BIT_NV".enum(0x00000010),
        "CLUSTER_ACCELERATION_STRUCTURE_ADDRESS_RESOLUTION_INDIRECTED_SRC_INFOS_COUNT_BIT_NV".enum(0x00000020)
    )

    EnumConstant(
        "CLUSTER_ACCELERATION_STRUCTURE_CLUSTER_ALLOW_DISABLE_OPACITY_MICROMAPS_NV".enum(0x00000001)
    )

    EnumConstant(
        "CLUSTER_ACCELERATION_STRUCTURE_GEOMETRY_CULL_DISABLE_BIT_NV".enum(0x00000001),
        "CLUSTER_ACCELERATION_STRUCTURE_GEOMETRY_NO_DUPLICATE_ANYHIT_INVOCATION_BIT_NV".enum(0x00000002),
        "CLUSTER_ACCELERATION_STRUCTURE_GEOMETRY_OPAQUE_BIT_NV".enum(0x00000004)
    )

    EnumConstant(
        "CLUSTER_ACCELERATION_STRUCTURE_INDEX_FORMAT_8BIT_NV".enum(0x00000001),
        "CLUSTER_ACCELERATION_STRUCTURE_INDEX_FORMAT_16BIT_NV".enum(0x00000002),
        "CLUSTER_ACCELERATION_STRUCTURE_INDEX_FORMAT_32BIT_NV".enum(0x00000004)
    )

    void(
        "GetClusterAccelerationStructureBuildSizesNV",

        VkDevice("device"),
        VkClusterAccelerationStructureInputInfoNV.const.p("pInfo"),
        VkAccelerationStructureBuildSizesInfoKHR.p("pSizeInfo")
    )

    void(
        "CmdBuildClusterAccelerationStructureIndirectNV",

        VkCommandBuffer("commandBuffer"),
        VkClusterAccelerationStructureCommandsInfoNV.const.p("pCommandInfos")
    )
}